<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="guna2Elipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>